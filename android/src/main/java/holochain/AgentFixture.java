// Java class holochain.AgentFixture is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

/**
 * AgentFixture defines an agent for the purposes of tests
 */
public final class AgentFixture implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    AgentFixture(Seq.Ref ref) { this.ref = ref; }
    
    public AgentFixture() { this.ref = __New(); }
    
    private static native Seq.Ref __New();
    
    public final native String getHash();
    public final native void setHash(String v);
    
    public final native String getIdentity();
    public final native void setIdentity(String v);
    
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof AgentFixture)) {
            return false;
        }
        AgentFixture that = (AgentFixture)o;
        String thisHash = getHash();
        String thatHash = that.getHash();
        if (thisHash == null) {
            if (thatHash != null) {
                return false;
            }
        } else if (!thisHash.equals(thatHash)) {
            return false;
        }
        String thisIdentity = getIdentity();
        String thatIdentity = that.getIdentity();
        if (thisIdentity == null) {
            if (thatIdentity != null) {
                return false;
            }
        } else if (!thisIdentity.equals(thatIdentity)) {
            return false;
        }
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {getHash(), getIdentity()});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("AgentFixture").append("{");
        b.append("Hash:").append(getHash()).append(",");
        b.append("Identity:").append(getIdentity()).append(",");
        return b.append("}").toString();
    }
}

