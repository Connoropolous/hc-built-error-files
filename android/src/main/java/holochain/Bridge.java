// Java class holochain.Bridge is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

/**
 * Bridge holds data returned by GetBridges
 */
public final class Bridge implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    Bridge(Seq.Ref ref) { this.ref = ref; }
    
    public Bridge() { this.ref = __New(); }
    
    private static native Seq.Ref __New();
    
    // skipped field Bridge.ToApp with unsupported type: *types.Named
    
    public final native String getToken();
    public final native void setToken(String v);
    
    public final native long getSide();
    public final native void setSide(long v);
    
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof Bridge)) {
            return false;
        }
        Bridge that = (Bridge)o;
        // skipped field Bridge.ToApp with unsupported type: *types.Named
        
        String thisToken = getToken();
        String thatToken = that.getToken();
        if (thisToken == null) {
            if (thatToken != null) {
                return false;
            }
        } else if (!thisToken.equals(thatToken)) {
            return false;
        }
        long thisSide = getSide();
        long thatSide = that.getSide();
        if (thisSide != thatSide) {
            return false;
        }
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {getToken(), getSide()});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("Bridge").append("{");
        b.append("Token:").append(getToken()).append(",");
        b.append("Side:").append(getSide()).append(",");
        return b.append("}").toString();
    }
}

