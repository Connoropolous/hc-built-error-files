// Java class holochain.GetResp is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

/**
 * GetResp holds the data of a get response
 */
public final class GetResp implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    GetResp(Seq.Ref ref) { this.ref = ref; }
    
    public GetResp() { this.ref = __New(); }
    
    private static native Seq.Ref __New();
    
    // skipped field GetResp.Entry with unsupported type: *types.Named
    
    public final native String getEntryType();
    public final native void setEntryType(String v);
    
    // skipped field GetResp.Sources with unsupported type: *types.Slice
    
    public final native String getFollowHash();
    public final native void setFollowHash(String v);
    
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof GetResp)) {
            return false;
        }
        GetResp that = (GetResp)o;
        // skipped field GetResp.Entry with unsupported type: *types.Named
        
        String thisEntryType = getEntryType();
        String thatEntryType = that.getEntryType();
        if (thisEntryType == null) {
            if (thatEntryType != null) {
                return false;
            }
        } else if (!thisEntryType.equals(thatEntryType)) {
            return false;
        }
        // skipped field GetResp.Sources with unsupported type: *types.Slice
        
        String thisFollowHash = getFollowHash();
        String thatFollowHash = that.getFollowHash();
        if (thisFollowHash == null) {
            if (thatFollowHash != null) {
                return false;
            }
        } else if (!thisFollowHash.equals(thatFollowHash)) {
            return false;
        }
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {getEntryType(), getFollowHash()});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("GetResp").append("{");
        b.append("EntryType:").append(getEntryType()).append(",");
        b.append("FollowHash:").append(getFollowHash()).append(",");
        return b.append("}").toString();
    }
}

