// Java class holochain.Link is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

/**
 * Link structure for holding meta tagging of linking entry
 */
public final class Link implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    Link(Seq.Ref ref) { this.ref = ref; }
    
    public Link() { this.ref = __New(); }
    
    private static native Seq.Ref __New();
    
    public final native String getLinkAction();
    public final native void setLinkAction(String v);
    
    public final native String getBase();
    public final native void setBase(String v);
    
    public final native String getLink();
    public final native void setLink(String v);
    
    public final native String getTag();
    public final native void setTag(String v);
    
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof Link)) {
            return false;
        }
        Link that = (Link)o;
        String thisLinkAction = getLinkAction();
        String thatLinkAction = that.getLinkAction();
        if (thisLinkAction == null) {
            if (thatLinkAction != null) {
                return false;
            }
        } else if (!thisLinkAction.equals(thatLinkAction)) {
            return false;
        }
        String thisBase = getBase();
        String thatBase = that.getBase();
        if (thisBase == null) {
            if (thatBase != null) {
                return false;
            }
        } else if (!thisBase.equals(thatBase)) {
            return false;
        }
        String thisLink = getLink();
        String thatLink = that.getLink();
        if (thisLink == null) {
            if (thatLink != null) {
                return false;
            }
        } else if (!thisLink.equals(thatLink)) {
            return false;
        }
        String thisTag = getTag();
        String thatTag = that.getTag();
        if (thisTag == null) {
            if (thatTag != null) {
                return false;
            }
        } else if (!thisTag.equals(thatTag)) {
            return false;
        }
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {getLinkAction(), getBase(), getLink(), getTag()});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("Link").append("{");
        b.append("LinkAction:").append(getLinkAction()).append(",");
        b.append("Base:").append(getBase()).append(",");
        b.append("Link:").append(getLink()).append(",");
        b.append("Tag:").append(getTag()).append(",");
        return b.append("}").toString();
    }
}

