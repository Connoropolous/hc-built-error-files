// Java class holochain.ErrorResponse is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

public final class ErrorResponse implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    ErrorResponse(Seq.Ref ref) { this.ref = ref; }
    
    public ErrorResponse() { this.ref = __New(); }
    
    private static native Seq.Ref __New();
    
    public final native long getCode();
    public final native void setCode(long v);
    
    public final native String getMessage();
    public final native void setMessage(String v);
    
    // skipped field ErrorResponse.Payload with unsupported type: *types.Interface
    
    /**
     * DecodeResponseError creates a go error object from the ErrorResponse data
     */
    public native void decodeResponseError() throws Exception;
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof ErrorResponse)) {
            return false;
        }
        ErrorResponse that = (ErrorResponse)o;
        long thisCode = getCode();
        long thatCode = that.getCode();
        if (thisCode != thatCode) {
            return false;
        }
        String thisMessage = getMessage();
        String thatMessage = that.getMessage();
        if (thisMessage == null) {
            if (thatMessage != null) {
                return false;
            }
        } else if (!thisMessage.equals(thatMessage)) {
            return false;
        }
        // skipped field ErrorResponse.Payload with unsupported type: *types.Interface
        
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {getCode(), getMessage()});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("ErrorResponse").append("{");
        b.append("Code:").append(getCode()).append(",");
        b.append("Message:").append(getMessage()).append(",");
        return b.append("}").toString();
    }
}

