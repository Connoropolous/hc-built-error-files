// Java class holochain.TaggedHash is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

/**
 * TaggedHash holds associated entries for the LinkQueryResponse
 */
public final class TaggedHash implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    TaggedHash(Seq.Ref ref) { this.ref = ref; }
    
    public TaggedHash() { this.ref = __New(); }
    
    private static native Seq.Ref __New();
    
    public final native String getH();
    public final native void setH(String v);
    
    public final native String getE();
    public final native void setE(String v);
    
    public final native String getEntryType();
    public final native void setEntryType(String v);
    
    public final native String getT();
    public final native void setT(String v);
    
    public final native String getSource();
    public final native void setSource(String v);
    
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof TaggedHash)) {
            return false;
        }
        TaggedHash that = (TaggedHash)o;
        String thisH = getH();
        String thatH = that.getH();
        if (thisH == null) {
            if (thatH != null) {
                return false;
            }
        } else if (!thisH.equals(thatH)) {
            return false;
        }
        String thisE = getE();
        String thatE = that.getE();
        if (thisE == null) {
            if (thatE != null) {
                return false;
            }
        } else if (!thisE.equals(thatE)) {
            return false;
        }
        String thisEntryType = getEntryType();
        String thatEntryType = that.getEntryType();
        if (thisEntryType == null) {
            if (thatEntryType != null) {
                return false;
            }
        } else if (!thisEntryType.equals(thatEntryType)) {
            return false;
        }
        String thisT = getT();
        String thatT = that.getT();
        if (thisT == null) {
            if (thatT != null) {
                return false;
            }
        } else if (!thisT.equals(thatT)) {
            return false;
        }
        String thisSource = getSource();
        String thatSource = that.getSource();
        if (thisSource == null) {
            if (thatSource != null) {
                return false;
            }
        } else if (!thisSource.equals(thatSource)) {
            return false;
        }
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {getH(), getE(), getEntryType(), getT(), getSource()});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("TaggedHash").append("{");
        b.append("H:").append(getH()).append(",");
        b.append("E:").append(getE()).append(",");
        b.append("EntryType:").append(getEntryType()).append(",");
        b.append("T:").append(getT()).append(",");
        b.append("Source:").append(getSource()).append(",");
        return b.append("}").toString();
    }
}

