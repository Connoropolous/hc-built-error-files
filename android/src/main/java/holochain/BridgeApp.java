// Java class holochain.BridgeApp is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

/**
 * BridgeApp describes an app for bridging, used
 */
public final class BridgeApp implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    BridgeApp(Seq.Ref ref) { this.ref = ref; }
    
    public BridgeApp() { this.ref = __New(); }
    
    private static native Seq.Ref __New();
    
    public final native Holochain_ getH();
    public final native void setH(Holochain_ v);
    
    public final native long getSide();
    public final native void setSide(long v);
    
    public final native String getBridgeGenesisDataFrom();
    public final native void setBridgeGenesisDataFrom(String v);
    
    public final native String getBridgeGenesisDataTo();
    public final native void setBridgeGenesisDataTo(String v);
    
    public final native String getPort();
    public final native void setPort(String v);
    
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof BridgeApp)) {
            return false;
        }
        BridgeApp that = (BridgeApp)o;
        Holochain_ thisH = getH();
        Holochain_ thatH = that.getH();
        if (thisH == null) {
            if (thatH != null) {
                return false;
            }
        } else if (!thisH.equals(thatH)) {
            return false;
        }
        long thisSide = getSide();
        long thatSide = that.getSide();
        if (thisSide != thatSide) {
            return false;
        }
        String thisBridgeGenesisDataFrom = getBridgeGenesisDataFrom();
        String thatBridgeGenesisDataFrom = that.getBridgeGenesisDataFrom();
        if (thisBridgeGenesisDataFrom == null) {
            if (thatBridgeGenesisDataFrom != null) {
                return false;
            }
        } else if (!thisBridgeGenesisDataFrom.equals(thatBridgeGenesisDataFrom)) {
            return false;
        }
        String thisBridgeGenesisDataTo = getBridgeGenesisDataTo();
        String thatBridgeGenesisDataTo = that.getBridgeGenesisDataTo();
        if (thisBridgeGenesisDataTo == null) {
            if (thatBridgeGenesisDataTo != null) {
                return false;
            }
        } else if (!thisBridgeGenesisDataTo.equals(thatBridgeGenesisDataTo)) {
            return false;
        }
        String thisPort = getPort();
        String thatPort = that.getPort();
        if (thisPort == null) {
            if (thatPort != null) {
                return false;
            }
        } else if (!thisPort.equals(thatPort)) {
            return false;
        }
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {getH(), getSide(), getBridgeGenesisDataFrom(), getBridgeGenesisDataTo(), getPort()});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("BridgeApp").append("{");
        b.append("H:").append(getH()).append(",");
        b.append("Side:").append(getSide()).append(",");
        b.append("BridgeGenesisDataFrom:").append(getBridgeGenesisDataFrom()).append(",");
        b.append("BridgeGenesisDataTo:").append(getBridgeGenesisDataTo()).append(",");
        b.append("Port:").append(getPort()).append(",");
        return b.append("}").toString();
    }
}

