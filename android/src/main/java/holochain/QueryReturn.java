// Java class holochain.QueryReturn is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

public final class QueryReturn implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    QueryReturn(Seq.Ref ref) { this.ref = ref; }
    
    public QueryReturn() { this.ref = __New(); }
    
    private static native Seq.Ref __New();
    
    public final native boolean getHashes();
    public final native void setHashes(boolean v);
    
    public final native boolean getEntries();
    public final native void setEntries(boolean v);
    
    public final native boolean getHeaders();
    public final native void setHeaders(boolean v);
    
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof QueryReturn)) {
            return false;
        }
        QueryReturn that = (QueryReturn)o;
        boolean thisHashes = getHashes();
        boolean thatHashes = that.getHashes();
        if (thisHashes != thatHashes) {
            return false;
        }
        boolean thisEntries = getEntries();
        boolean thatEntries = that.getEntries();
        if (thisEntries != thatEntries) {
            return false;
        }
        boolean thisHeaders = getHeaders();
        boolean thatHeaders = that.getHeaders();
        if (thisHeaders != thatHeaders) {
            return false;
        }
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {getHashes(), getEntries(), getHeaders()});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("QueryReturn").append("{");
        b.append("Hashes:").append(getHashes()).append(",");
        b.append("Entries:").append(getEntries()).append(",");
        b.append("Headers:").append(getHeaders()).append(",");
        return b.append("}").toString();
    }
}

