// Java class holochain.ServiceConfig is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

/**
 * ServiceConfig holds the service settings
 */
public final class ServiceConfig implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    ServiceConfig(Seq.Ref ref) { this.ref = ref; }
    
    public ServiceConfig() { this.ref = __New(); }
    
    private static native Seq.Ref __New();
    
    public final native boolean getDefaultPeerModeAuthor();
    public final native void setDefaultPeerModeAuthor(boolean v);
    
    public final native boolean getDefaultPeerModeDHTNode();
    public final native void setDefaultPeerModeDHTNode(boolean v);
    
    public final native String getDefaultBootstrapServer();
    public final native void setDefaultBootstrapServer(String v);
    
    public final native boolean getDefaultEnableMDNS();
    public final native void setDefaultEnableMDNS(boolean v);
    
    public final native boolean getDefaultEnableNATUPnP();
    public final native void setDefaultEnableNATUPnP(boolean v);
    
    /**
     * Validate validates settings values
     */
    public native void validate() throws Exception;
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof ServiceConfig)) {
            return false;
        }
        ServiceConfig that = (ServiceConfig)o;
        boolean thisDefaultPeerModeAuthor = getDefaultPeerModeAuthor();
        boolean thatDefaultPeerModeAuthor = that.getDefaultPeerModeAuthor();
        if (thisDefaultPeerModeAuthor != thatDefaultPeerModeAuthor) {
            return false;
        }
        boolean thisDefaultPeerModeDHTNode = getDefaultPeerModeDHTNode();
        boolean thatDefaultPeerModeDHTNode = that.getDefaultPeerModeDHTNode();
        if (thisDefaultPeerModeDHTNode != thatDefaultPeerModeDHTNode) {
            return false;
        }
        String thisDefaultBootstrapServer = getDefaultBootstrapServer();
        String thatDefaultBootstrapServer = that.getDefaultBootstrapServer();
        if (thisDefaultBootstrapServer == null) {
            if (thatDefaultBootstrapServer != null) {
                return false;
            }
        } else if (!thisDefaultBootstrapServer.equals(thatDefaultBootstrapServer)) {
            return false;
        }
        boolean thisDefaultEnableMDNS = getDefaultEnableMDNS();
        boolean thatDefaultEnableMDNS = that.getDefaultEnableMDNS();
        if (thisDefaultEnableMDNS != thatDefaultEnableMDNS) {
            return false;
        }
        boolean thisDefaultEnableNATUPnP = getDefaultEnableNATUPnP();
        boolean thatDefaultEnableNATUPnP = that.getDefaultEnableNATUPnP();
        if (thisDefaultEnableNATUPnP != thatDefaultEnableNATUPnP) {
            return false;
        }
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {getDefaultPeerModeAuthor(), getDefaultPeerModeDHTNode(), getDefaultBootstrapServer(), getDefaultEnableMDNS(), getDefaultEnableNATUPnP()});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("ServiceConfig").append("{");
        b.append("DefaultPeerModeAuthor:").append(getDefaultPeerModeAuthor()).append(",");
        b.append("DefaultPeerModeDHTNode:").append(getDefaultPeerModeDHTNode()).append(",");
        b.append("DefaultBootstrapServer:").append(getDefaultBootstrapServer()).append(",");
        b.append("DefaultEnableMDNS:").append(getDefaultEnableMDNS()).append(",");
        b.append("DefaultEnableNATUPnP:").append(getDefaultEnableNATUPnP()).append(",");
        return b.append("}").toString();
    }
}

