// Java class holochain.Chain is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

/**
 * Chain structure for providing in-memory access to chain data, entries headers and hashes
 */
public final class Chain implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    // skipped constructor Chain.NewChain with unsupported parameter or return types
    
    // skipped constructor Chain.NewChainFromFile with unsupported parameter or return types
    
    Chain(Seq.Ref ref) { this.ref = ref; }
    
    // skipped field Chain.Hashes with unsupported type: *types.Slice
    
    // skipped field Chain.Headers with unsupported type: *types.Slice
    
    // skipped field Chain.Entries with unsupported type: *types.Slice
    
    // skipped field Chain.TypeTops with unsupported type: *types.Map
    
    // skipped field Chain.Hmap with unsupported type: *types.Map
    
    // skipped field Chain.Emap with unsupported type: *types.Map
    
    // skipped method Chain.AddEntry with unsupported parameter or return types
    
    /**
     * Close the chain&#39;s file
     */
    public native void close();
    // skipped method Chain.Get with unsupported parameter or return types
    
    // skipped method Chain.GetEntry with unsupported parameter or return types
    
    // skipped method Chain.GetEntryHeader with unsupported parameter or return types
    
    /**
     * JSON converts a chain to a json string dump of the headers and entries
     */
    public native String json() throws Exception;
    /**
     * Length returns the number of entries in the chain
     */
    public native long length();
    // skipped method Chain.MarshalChain with unsupported parameter or return types
    
    /**
     * Nth returns the nth latest header
     */
    public native Header nth(long n);
    /**
     * String converts a chain to a textual dump of the headers and entries
     */
    public native String string();
    /**
     * Top returns the latest header
     */
    public native Header top();
    // skipped method Chain.TopType with unsupported parameter or return types
    
    /**
     * Validate traverses chain confirming the hashes
    @TODO confirm that TypeLinks are also correct
    @TODO confirm signatures
     */
    public native void validate(boolean skipEntries) throws Exception;
    // skipped method Chain.Walk with unsupported parameter or return types
    
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof Chain)) {
            return false;
        }
        Chain that = (Chain)o;
        // skipped field Chain.Hashes with unsupported type: *types.Slice
        
        // skipped field Chain.Headers with unsupported type: *types.Slice
        
        // skipped field Chain.Entries with unsupported type: *types.Slice
        
        // skipped field Chain.TypeTops with unsupported type: *types.Map
        
        // skipped field Chain.Hmap with unsupported type: *types.Map
        
        // skipped field Chain.Emap with unsupported type: *types.Map
        
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {});
    }
    
    @Override public String toString() {
        return string();
    }
}

