// Java class holochain.RoutingTable is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

/**
 * RoutingTable defines the routing table.
 */
public final class RoutingTable implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    // skipped constructor RoutingTable.NewRoutingTable with unsupported parameter or return types
    
    RoutingTable(Seq.Ref ref) { this.ref = ref; }
    
    // skipped field RoutingTable.Buckets with unsupported type: *types.Slice
    
    // skipped field RoutingTable.PeerRemoved with unsupported type: *types.Signature
    
    // skipped field RoutingTable.PeerAdded with unsupported type: *types.Signature
    
    // skipped method RoutingTable.Find with unsupported parameter or return types
    
    /**
     * IsEmpty returns bool
     */
    public native boolean isEmpty();
    // skipped method RoutingTable.ListPeers with unsupported parameter or return types
    
    // skipped method RoutingTable.NearestPeer with unsupported parameter or return types
    
    // skipped method RoutingTable.NearestPeers with unsupported parameter or return types
    
    /**
     * Print prints a descriptive statement about the provided RoutingTable
     */
    public native void print();
    // skipped method RoutingTable.Remove with unsupported parameter or return types
    
    /**
     * Size returns the total number of peers in the routing table
     */
    public native long size();
    // skipped method RoutingTable.Update with unsupported parameter or return types
    
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof RoutingTable)) {
            return false;
        }
        RoutingTable that = (RoutingTable)o;
        // skipped field RoutingTable.Buckets with unsupported type: *types.Slice
        
        // skipped field RoutingTable.PeerRemoved with unsupported type: *types.Signature
        
        // skipped field RoutingTable.PeerAdded with unsupported type: *types.Signature
        
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("RoutingTable").append("{");
        return b.append("}").toString();
    }
}

