// Java class holochain.Nucleus is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

/**
 * Nucleus encapsulates Application parts: Ribosomes to run code in Zomes, plus application
validation and direct message passing protocols
 */
public final class Nucleus implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    /**
     * NewNucleus creates a new Nucleus structure
     */
    public Nucleus(Holochain_ h, DNA dna) {
        this.ref = __NewNucleus(h, dna);
    }
    
    private static native Seq.Ref __NewNucleus(Holochain_ h, DNA dna);
    
    Nucleus(Seq.Ref ref) { this.ref = ref; }
    
    public native DNA dna();
    public native void runGenesis() throws Exception;
    public native void start() throws Exception;
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof Nucleus)) {
            return false;
        }
        Nucleus that = (Nucleus)o;
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("Nucleus").append("{");
        return b.append("}").toString();
    }
}

