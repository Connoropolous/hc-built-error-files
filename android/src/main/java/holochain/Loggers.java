// Java class holochain.Loggers is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

/**
 * Loggers holds the logging structures for the different parts of the system
 */
public final class Loggers implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    Loggers(Seq.Ref ref) { this.ref = ref; }
    
    public Loggers() { this.ref = __New(); }
    
    private static native Seq.Ref __New();
    
    // skipped field Loggers.App with unsupported type: *types.Named
    
    // skipped field Loggers.Debug with unsupported type: *types.Named
    
    // skipped field Loggers.DHT with unsupported type: *types.Named
    
    // skipped field Loggers.Gossip with unsupported type: *types.Named
    
    // skipped field Loggers.TestPassed with unsupported type: *types.Named
    
    // skipped field Loggers.TestFailed with unsupported type: *types.Named
    
    // skipped field Loggers.TestInfo with unsupported type: *types.Named
    
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof Loggers)) {
            return false;
        }
        Loggers that = (Loggers)o;
        // skipped field Loggers.App with unsupported type: *types.Named
        
        // skipped field Loggers.Debug with unsupported type: *types.Named
        
        // skipped field Loggers.DHT with unsupported type: *types.Named
        
        // skipped field Loggers.Gossip with unsupported type: *types.Named
        
        // skipped field Loggers.TestPassed with unsupported type: *types.Named
        
        // skipped field Loggers.TestFailed with unsupported type: *types.Named
        
        // skipped field Loggers.TestInfo with unsupported type: *types.Named
        
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("Loggers").append("{");
        return b.append("}").toString();
    }
}

