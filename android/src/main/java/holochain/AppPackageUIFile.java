// Java class holochain.AppPackageUIFile is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

public final class AppPackageUIFile implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    AppPackageUIFile(Seq.Ref ref) { this.ref = ref; }
    
    public AppPackageUIFile() { this.ref = __New(); }
    
    private static native Seq.Ref __New();
    
    public final native String getFileName();
    public final native void setFileName(String v);
    
    public final native String getData();
    public final native void setData(String v);
    
    public final native String getEncoding();
    public final native void setEncoding(String v);
    
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof AppPackageUIFile)) {
            return false;
        }
        AppPackageUIFile that = (AppPackageUIFile)o;
        String thisFileName = getFileName();
        String thatFileName = that.getFileName();
        if (thisFileName == null) {
            if (thatFileName != null) {
                return false;
            }
        } else if (!thisFileName.equals(thatFileName)) {
            return false;
        }
        String thisData = getData();
        String thatData = that.getData();
        if (thisData == null) {
            if (thatData != null) {
                return false;
            }
        } else if (!thisData.equals(thatData)) {
            return false;
        }
        String thisEncoding = getEncoding();
        String thatEncoding = that.getEncoding();
        if (thisEncoding == null) {
            if (thatEncoding != null) {
                return false;
            }
        } else if (!thisEncoding.equals(thatEncoding)) {
            return false;
        }
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {getFileName(), getData(), getEncoding()});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("AppPackageUIFile").append("{");
        b.append("FileName:").append(getFileName()).append(",");
        b.append("Data:").append(getData()).append(",");
        b.append("Encoding:").append(getEncoding()).append(",");
        return b.append("}").toString();
    }
}

