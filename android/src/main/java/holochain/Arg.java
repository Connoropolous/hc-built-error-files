// Java class holochain.Arg is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

public final class Arg implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    Arg(Seq.Ref ref) { this.ref = ref; }
    
    public Arg() { this.ref = __New(); }
    
    private static native Seq.Ref __New();
    
    public final native String getName();
    public final native void setName(String v);
    
    // skipped field Arg.Type with unsupported type: *types.Named
    
    public final native boolean getOptional();
    public final native void setOptional(boolean v);
    
    // skipped field Arg.MapType with unsupported type: *types.Named
    
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof Arg)) {
            return false;
        }
        Arg that = (Arg)o;
        String thisName = getName();
        String thatName = that.getName();
        if (thisName == null) {
            if (thatName != null) {
                return false;
            }
        } else if (!thisName.equals(thatName)) {
            return false;
        }
        // skipped field Arg.Type with unsupported type: *types.Named
        
        boolean thisOptional = getOptional();
        boolean thatOptional = that.getOptional();
        if (thisOptional != thatOptional) {
            return false;
        }
        // skipped field Arg.MapType with unsupported type: *types.Named
        
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {getName(), getOptional()});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("Arg").append("{");
        b.append("Name:").append(getName()).append(",");
        b.append("Optional:").append(getOptional()).append(",");
        return b.append("}").toString();
    }
}

