// Java class holochain.QueryConstrain is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

public final class QueryConstrain implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    QueryConstrain(Seq.Ref ref) { this.ref = ref; }
    
    public QueryConstrain() { this.ref = __New(); }
    
    private static native Seq.Ref __New();
    
    // skipped field QueryConstrain.EntryTypes with unsupported type: *types.Slice
    
    public final native String getContains();
    public final native void setContains(String v);
    
    public final native String getEquals();
    public final native void setEquals(String v);
    
    public final native String getMatches();
    public final native void setMatches(String v);
    
    public final native long getCount();
    public final native void setCount(long v);
    
    public final native long getPage();
    public final native void setPage(long v);
    
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof QueryConstrain)) {
            return false;
        }
        QueryConstrain that = (QueryConstrain)o;
        // skipped field QueryConstrain.EntryTypes with unsupported type: *types.Slice
        
        String thisContains = getContains();
        String thatContains = that.getContains();
        if (thisContains == null) {
            if (thatContains != null) {
                return false;
            }
        } else if (!thisContains.equals(thatContains)) {
            return false;
        }
        String thisEquals = getEquals();
        String thatEquals = that.getEquals();
        if (thisEquals == null) {
            if (thatEquals != null) {
                return false;
            }
        } else if (!thisEquals.equals(thatEquals)) {
            return false;
        }
        String thisMatches = getMatches();
        String thatMatches = that.getMatches();
        if (thisMatches == null) {
            if (thatMatches != null) {
                return false;
            }
        } else if (!thisMatches.equals(thatMatches)) {
            return false;
        }
        long thisCount = getCount();
        long thatCount = that.getCount();
        if (thisCount != thatCount) {
            return false;
        }
        long thisPage = getPage();
        long thatPage = that.getPage();
        if (thisPage != thatPage) {
            return false;
        }
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {getContains(), getEquals(), getMatches(), getCount(), getPage()});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("QueryConstrain").append("{");
        b.append("Contains:").append(getContains()).append(",");
        b.append("Equals:").append(getEquals()).append(",");
        b.append("Matches:").append(getMatches()).append(",");
        b.append("Count:").append(getCount()).append(",");
        b.append("Page:").append(getPage()).append(",");
        return b.append("}").toString();
    }
}

