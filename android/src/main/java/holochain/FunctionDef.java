// Java class holochain.FunctionDef is a proxy for talking to a Go program.
//   gobind -lang=java github.com/Holochain/holochain-proto
//
// File is generated by gobind. Do not edit.
package holochain;

import go.Seq;

/**
 * FunctionDef holds the name and calling type of an DNA exposed function
 */
public final class FunctionDef implements Seq.Proxy {
    static { Holochain.touch(); }
    
    private final Seq.Ref ref;
    
    @Override public final int incRefnum() {
          int refnum = ref.refnum;
          Seq.incGoRef(refnum);
          return refnum;
    }
    
    FunctionDef(Seq.Ref ref) { this.ref = ref; }
    
    public FunctionDef() { this.ref = __New(); }
    
    private static native Seq.Ref __New();
    
    public final native String getName();
    public final native void setName(String v);
    
    public final native String getCallingType();
    public final native void setCallingType(String v);
    
    public final native String getExposure();
    public final native void setExposure(String v);
    
    /**
     * ValidExposure verifies that the function can be called in the given context
     */
    public native boolean validExposure(String context);
    @Override public boolean equals(Object o) {
        if (o == null || !(o instanceof FunctionDef)) {
            return false;
        }
        FunctionDef that = (FunctionDef)o;
        String thisName = getName();
        String thatName = that.getName();
        if (thisName == null) {
            if (thatName != null) {
                return false;
            }
        } else if (!thisName.equals(thatName)) {
            return false;
        }
        String thisCallingType = getCallingType();
        String thatCallingType = that.getCallingType();
        if (thisCallingType == null) {
            if (thatCallingType != null) {
                return false;
            }
        } else if (!thisCallingType.equals(thatCallingType)) {
            return false;
        }
        String thisExposure = getExposure();
        String thatExposure = that.getExposure();
        if (thisExposure == null) {
            if (thatExposure != null) {
                return false;
            }
        } else if (!thisExposure.equals(thatExposure)) {
            return false;
        }
        return true;
    }
    
    @Override public int hashCode() {
        return java.util.Arrays.hashCode(new Object[] {getName(), getCallingType(), getExposure()});
    }
    
    @Override public String toString() {
        StringBuilder b = new StringBuilder();
        b.append("FunctionDef").append("{");
        b.append("Name:").append(getName()).append(",");
        b.append("CallingType:").append(getCallingType()).append(",");
        b.append("Exposure:").append(getExposure()).append(",");
        return b.append("}").toString();
    }
}

